from threading import Thread
# def func():
#     for i in range(100):
#         print('func',i)
#
# if __name__ == '__main__':
#     t = Thread(target=func) # 创建线程并给线程安排任务
#     t.start()   #多线程状态为可以开始工作状态，具体的执行时间为CPU决定
#
#     for i in range(100):
#         print('main',i)
class MyThread(Thread):
    def run(self): #固定的 ——> 当线程被执行的时候，被执行的就是run()
        for i in range(100):
            print("子线程",i)

if __name__ == "__main__":
    t = MyThread()
    # t.run() #办法的调用了. —> 单线程？？？
    t.start()#开启线程
    for i in  range(1000):
        print("主线程",i)





#函数传参
def func(name):
    for i in range(100):
        print(name,i)
if __name__ == "__main__":
    t = Thread(target=func,args=("周杰伦",))#传递参数必须是元组
    t.start()
